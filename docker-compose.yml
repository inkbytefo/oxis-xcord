version: "3.9"

services:
  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - API_URL=http://api-gateway:8000
    depends_on:
      - api-gateway

  # API Gateway
  api-gateway:
    build: ./backend/api-gateway
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - AUTH_SERVICE_URL=http://auth-service:8001
      - MESSAGING_SERVICE_URL=http://messaging-service:8002
      - VOICE_SERVICE_URL=http://voice-service:8003
      - SERVER_MANAGEMENT_URL=http://server-management-service:8004
    depends_on:
      - auth-service
      - messaging-service
      - voice-service
      - server-management-service

  # Auth Service
  auth-service:
    build: ./backend/auth-service
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=production
      - PORT=8001
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/auth_db
      - REDIS_URL=redis://redis:6379
      - JWT_ACCESS_SECRET=your_access_secret_key_here
      - JWT_REFRESH_SECRET=your_refresh_secret_key_here
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - postgres
      - redis

  # Messaging Service
  messaging-service:
    build: ./backend/messaging-service
    ports:
      - "8002:8002"
    environment:
      - NODE_ENV=production
      - PORT=8002
      - MONGODB_URI=mongodb://mongodb:27017/messaging
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:8001
    depends_on:
      - mongodb
      - redis
      - auth-service

  # Voice Service
  voice-service:
    build: ./backend/voice-service
    ports:
      - "8003:8003"
    environment:
      - NODE_ENV=production
      - PORT=8003
      - REDIS_URL=redis://redis:6379
      - TURN_USERNAME=your_turn_username
      - TURN_PASSWORD=your_turn_password
    depends_on:
      - redis

  # Server Management Service
  server-management-service:
    build: ./backend/server-management-service
    ports:
      - "8004:8004"
    environment:
      - NODE_ENV=production
      - PORT=8004
      - MONGODB_URI=mongodb://mongodb:27017/server-management
      - AUTH_SERVICE_URL=http://auth-service:8001
    depends_on:
      - mongodb
      - auth-service

  # PostgreSQL
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - POSTGRES_DB=auth_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # MongoDB
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  # Redis
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "8006:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # Logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    volumes:
      - ./logstash/config:/usr/share/logstash/config
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logs/logstash:/var/log/logstash
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:
