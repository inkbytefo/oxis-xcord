input {
  beats {
    port => 5044
    tags => ["filebeat"]
  }
  tcp {
    port => 5000
    codec => json_lines
    tags => ["tcp"]
  }
  udp {
    port => 5000
    codec => json
    tags => ["udp"]
  }
}

filter {
  # Common processing
  mutate {
    add_field => {
      "environment" => "${ENVIRONMENT:production}"
      "application" => "xcord"
    }
  }

  # Service-specific processing
  if [service] == "api-gateway" {
    mutate { add_tag => ["api"] }
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} \[%{DATA:service}\] %{GREEDYDATA:msg}" }
    }
  }
  else if [service] in ["auth", "messaging", "voice", "server-management"] {
    mutate { add_tag => ["microservice"] }
    json {
      source => "message"
      target => "parsed_log"
    }
    if [parsed_log][level] == "error" {
      mutate { add_tag => ["error"] }
    }
  }
  else if [type] == "metric" {
    mutate { add_tag => ["metric"] }
    if [cpu_usage] and [cpu_usage] > 80 {
      mutate { add_tag => ["high_cpu"] }
    }
    if [memory_usage] and [memory_usage] > 85 {
      mutate { add_tag => ["high_memory"] }
    }
  }

  # Timestamp handling
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
  
  # Error detection across all types
  if [level] == "ERROR" or [level] == "FATAL" or [parsed_log][level] == "error" {
    mutate { add_tag => ["error"] }
  }

  # Security audit events
  if [event] in ["login", "logout", "register", "password_change"] {
    mutate { add_tag => ["security_audit"] }
  }

  # Performance tracking
  if [response_time] and [response_time] > 1000 {
    mutate { add_tag => ["slow_response"] }
  }

  # Clean up fields
  mutate {
    remove_field => ["path", "host", "tags"]
    remove_field => ["[parsed_log][timestamp]"]
  }
}

output {
  if "error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "xcord-errors-%{+YYYY.MM}"
      template_name => "xcord-errors"
      template_overwrite => true
    }
  }
  else if "security_audit" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "xcord-security-%{+YYYY.MM}"
      template_name => "xcord-security"
      template_overwrite => true
    }
  }
  else if "metric" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "xcord-metrics-%{+YYYY.MM}"
      template_name => "xcord-metrics"
      template_overwrite => true
    }
  }
  else if "microservice" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "xcord-service-%{service}-%{+YYYY.MM}"
      template_name => "xcord-services"
      template_overwrite => true
    }
  }
  else if "api" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "xcord-api-%{+YYYY.MM}"
      template_name => "xcord-api"
      template_overwrite => true
    }
  }
  else {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "xcord-logs-%{+YYYY.MM}"
      template_name => "xcord-default"
      template_overwrite => true
    }
  }

  # Alert on critical events
  if "high_cpu" in [tags] or "high_memory" in [tags] or "error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "xcord-alerts-%{+YYYY.MM}"
      template_name => "xcord-alerts"
      template_overwrite => true
    }
  }
}
