input {
  beats {
    port => 5044
    tags => ["api"]
    ssl => false
  }
  tcp {
    port => 5000
    tags => ["api-tcp"]
    codec => json_lines
  }
}

filter {
  if "api" in [tags] {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} \[%{DATA:service}\] %{GREEDYDATA:msg}" }
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    mutate {
      add_field => {
        "service_type" => "api"
        "environment" => "${ENVIRONMENT:production}"
      }
    }
  }
  
  if [level] == "ERROR" {
    mutate {
      add_tag => ["error"]
    }
  }

  ruby {
    code => "event.set('processing_time', Time.now.to_f - event.get('@timestamp').to_f)"
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "xcord-api-logs-%{+YYYY.MM.dd}"
    template_name => "xcord-api-logs"
    template_overwrite => true
  }
  if "error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "xcord-errors-%{+YYYY.MM.dd}"
    }
  }
}
